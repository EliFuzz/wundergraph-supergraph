{
  "engineConfig": {
    "defaultFlushInterval": "500",
    "datasourceConfigurations": [
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          { "typeName": "Query", "fieldNames": ["sales", "sale", "totalRevenue"] },
          { "typeName": "Mutation", "fieldNames": ["createSale"] }
        ],
        "childNodes": [{ "typeName": "Sale", "fieldNames": ["id", "amount", "productName", "customerEmail", "saleDate"] }],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": { "url": { "staticVariableContent": "http://localhost:4001/graphql" }, "method": "POST", "body": {}, "baseUrl": {}, "path": {} },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://localhost:4001/sse" },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_SSE",
            "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "type Sale {\n  id: ID!\n  amount: Float!\n  productName: String!\n  customerEmail: String!\n  saleDate: String!\n}\n\ntype Query {\n  sales: [Sale!]!\n  sale(id: String!): Sale\n  totalRevenue: Float!\n}\n\ntype Mutation {\n  createSale(input: CreateSaleInput!): Sale!\n}\n\ninput CreateSaleInput {\n  amount: Float!\n  productName: String!\n  customerEmail: String!\n  saleDate: String!\n}"
          },
          "upstreamSchema": { "key": "7c4a52565e8ba6a83a232bbdb9230c9ec6263b20" }
        },
        "requestTimeoutSeconds": "10",
        "id": "0"
      },
      {
        "kind": "GRAPHQL",
        "rootNodes": [
          { "typeName": "CampaignPayload", "fieldNames": ["id", "name", "description", "budget", "startDate", "endDate", "isActive"] },
          { "typeName": "Query", "fieldNames": ["campaigns", "campaign", "activeCampaigns", "totalMarketingBudget", "activeMarketingBudget"] },
          { "typeName": "Mutation", "fieldNames": ["createCampaign"] }
        ],
        "overrideFieldPathFromAlias": true,
        "customGraphql": {
          "fetch": { "url": { "staticVariableContent": "http://localhost:4002/graphql" }, "method": "POST", "body": {}, "baseUrl": {}, "path": {} },
          "subscription": {
            "enabled": true,
            "url": { "staticVariableContent": "http://localhost:4002/graphql" },
            "protocol": "GRAPHQL_SUBSCRIPTION_PROTOCOL_WS",
            "websocketSubprotocol": "GRAPHQL_WEBSOCKET_SUBPROTOCOL_AUTO"
          },
          "federation": {
            "enabled": true,
            "serviceSdl": "directive @key(fields: String!) on OBJECT | INTERFACE\n\ntype CampaignPayload @key(fields: \"id\") {\n  id: ID!\n  name: String!\n  description: String!\n  budget: Float!\n  startDate: String!\n  endDate: String!\n  isActive: Boolean!\n}\n\ninput CreateCampaignInput {\n  name: String!\n  description: String!\n  budget: Float!\n  startDate: String!\n  endDate: String!\n  isActive: Boolean!\n}\n\ntype Query {\n  campaigns: [CampaignPayload!]!\n  campaign(id: ID!): CampaignPayload\n  activeCampaigns: [CampaignPayload!]!\n  totalMarketingBudget: Float!\n  activeMarketingBudget: Float!\n}\n\ntype Mutation {\n  createCampaign(input: CreateCampaignInput!): CampaignPayload!\n}\n"
          },
          "upstreamSchema": { "key": "775cdd7aaf85d2ebda1577a3ed5a720b6cdddfd4" }
        },
        "requestTimeoutSeconds": "10",
        "id": "1",
        "keys": [{ "typeName": "CampaignPayload", "selectionSet": "id" }]
      }
    ],
    "fieldConfigurations": [
      { "typeName": "Query", "fieldName": "sale", "argumentsConfiguration": [{ "name": "id", "sourceType": "FIELD_ARGUMENT" }] },
      { "typeName": "Query", "fieldName": "campaign", "argumentsConfiguration": [{ "name": "id", "sourceType": "FIELD_ARGUMENT" }] },
      { "typeName": "Mutation", "fieldName": "createSale", "argumentsConfiguration": [{ "name": "input", "sourceType": "FIELD_ARGUMENT" }] },
      { "typeName": "Mutation", "fieldName": "createCampaign", "argumentsConfiguration": [{ "name": "input", "sourceType": "FIELD_ARGUMENT" }] }
    ],
    "graphqlSchema": "schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Sale {\n  id: ID!\n  amount: Float!\n  productName: String!\n  customerEmail: String!\n  saleDate: String!\n}\n\ntype Query {\n  sales: [Sale!]!\n  sale(id: String!): Sale\n  totalRevenue: Float!\n  campaigns: [CampaignPayload!]!\n  campaign(id: ID!): CampaignPayload\n  activeCampaigns: [CampaignPayload!]!\n  totalMarketingBudget: Float!\n  activeMarketingBudget: Float!\n}\n\ntype Mutation {\n  createSale(input: CreateSaleInput!): Sale!\n  createCampaign(input: CreateCampaignInput!): CampaignPayload!\n}\n\ninput CreateSaleInput {\n  amount: Float!\n  productName: String!\n  customerEmail: String!\n  saleDate: String!\n}\n\ntype CampaignPayload {\n  id: ID!\n  name: String!\n  description: String!\n  budget: Float!\n  startDate: String!\n  endDate: String!\n  isActive: Boolean!\n}\n\ninput CreateCampaignInput {\n  name: String!\n  description: String!\n  budget: Float!\n  startDate: String!\n  endDate: String!\n  isActive: Boolean!\n}",
    "stringStorage": {
      "7c4a52565e8ba6a83a232bbdb9230c9ec6263b20": "schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ninput CreateSaleInput {\n  amount: Float!\n  customerEmail: String!\n  productName: String!\n  saleDate: String!\n}\n\ntype Mutation {\n  createSale(input: CreateSaleInput!): Sale!\n}\n\ntype Query {\n  sale(id: String!): Sale\n  sales: [Sale!]!\n  totalRevenue: Float!\n}\n\ntype Sale {\n  amount: Float!\n  customerEmail: String!\n  id: ID!\n  productName: String!\n  saleDate: String!\n}\n\nscalar openfed__FieldSet",
      "775cdd7aaf85d2ebda1577a3ed5a720b6cdddfd4": "schema {\n  query: Query\n  mutation: Mutation\n}\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype CampaignPayload @key(fields: \"id\") {\n  budget: Float!\n  description: String!\n  endDate: String!\n  id: ID!\n  isActive: Boolean!\n  name: String!\n  startDate: String!\n}\n\ninput CreateCampaignInput {\n  budget: Float!\n  description: String!\n  endDate: String!\n  isActive: Boolean!\n  name: String!\n  startDate: String!\n}\n\ntype Mutation {\n  createCampaign(input: CreateCampaignInput!): CampaignPayload!\n}\n\ntype Query {\n  activeCampaigns: [CampaignPayload!]!\n  activeMarketingBudget: Float!\n  campaign(id: ID!): CampaignPayload\n  campaigns: [CampaignPayload!]!\n  totalMarketingBudget: Float!\n}\n\nscalar openfed__FieldSet"
    }
  },
  "version": "7453e215-1a04-4859-afab-31b0929fb794",
  "subgraphs": [
    { "id": "0", "name": "sales", "routingUrl": "http://localhost:4001/graphql" },
    { "id": "1", "name": "marketing", "routingUrl": "http://localhost:4002/graphql" }
  ],
  "compatibilityVersion": "1:0.41.1"
}
